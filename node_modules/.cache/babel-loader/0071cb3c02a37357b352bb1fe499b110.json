{"ast":null,"code":"var _jsxFileName = \"/Users/seyedmmojtabaabutalebi/Desktop/second-react/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\"; // use css module :\n\nimport classes from \"./AddUser.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault(); // to check validation\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: \"Invalid Input\",\n        massage: \"Please enter a valid name and age (non-empty values)\"\n      });\n    } //  '+' help force convension from string to number\n\n\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid Age\",\n        massage: \"Please enter a valid age (> 0)\"\n      });\n    }\n\n    props.onAddUser(enteredUsername, enteredAge); // to reset values after submit\n\n    setEnteredUsername(\"\");\n    setEnteredAge(\"\");\n  };\n\n  const usernameChangeHandler = event => {\n    //set changes for every keystroke in input\n    setEnteredUsername(event.target.value); // get the value the user currently entered\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      massage: error.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: enteredUsername,\n          onChange: usernameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years) : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          value: enteredAge,\n          onChange: ageChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"bqAxUgdtt7Keuw4yuU4WXWGzYZM=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/seyedmmojtabaabutalebi/Desktop/second-react/src/components/Users/AddUser.js"],"names":["React","useState","Card","Button","ErrorModal","classes","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","error","setError","addUserHandler","event","preventDefault","trim","length","title","massage","onAddUser","usernameChangeHandler","target","value","ageChangeHandler","age","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\n// use css module :\nimport classes from \"./AddUser.module.css\";\nconst AddUser = (props) => {\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    // to check validation\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: \"Invalid Input\",\n        massage: \"Please enter a valid name and age (non-empty values)\",\n      });\n    }\n    //  '+' help force convension from string to number\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid Age\",\n        massage: \"Please enter a valid age (> 0)\",\n      });\n    }\n    props.onAddUser(enteredUsername, enteredAge);\n    // to reset values after submit\n    setEnteredUsername(\"\");\n    setEnteredAge(\"\");\n  };\n\n  const usernameChangeHandler = (event) => {\n    //set changes for every keystroke in input\n    setEnteredUsername(event.target.value); // get the value the user currently entered\n  };\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n  return (\n    <div>\n      {error && (\n        <ErrorModal title={error.title} massage={error.age}></ErrorModal>\n      )}\n      {/* // Card component is used to set style around the form input */}\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          {/* for is a keyName in js and it is not an attribute => so we use : htmlFor for label in form */}\n          <label htmlFor=\"username\">Username : </label>\n          {/* value reflect current state */}\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={enteredUsername}\n            onChange={usernameChangeHandler}\n          />\n          <label htmlFor=\"age\">Age (Years) : </label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            value={enteredAge}\n            onChange={ageChangeHandler}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}