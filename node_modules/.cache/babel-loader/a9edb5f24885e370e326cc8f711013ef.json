{"ast":null,"code":"var _jsxFileName = \"/Users/seyedmmojtabaabutalebi/Desktop/React-works/second-react-2/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/wrapper\"; // use css module :\n\nimport classes from \"./AddUser.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef(); // const [enteredUsername, setEnteredUsername] = useState(\"\");\n  // const [enteredAge, setEnteredAge] = useState(\"\");\n\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = nameInputRef.current.value; // to check validation\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid Input\",\n        massage: \"Please enter a valid name and age (non-empty values)\"\n      });\n      return;\n    } //  '+' help force convension from string to number\n\n\n    if (+enteredUserAge < 1) {\n      setError({\n        title: \"Invalid Age\",\n        massage: \"Please enter a valid age (> 0)\"\n      });\n      return;\n    }\n\n    props.onAddUser(enteredName, enteredUserAge); // to reset values after submit\n    // setEnteredUsername(\"\");\n    // setEnteredAge(\"\");\n  }; // const usernameChangeHandler = (event) => {\n  //   //set changes for every keystroke in input\n  //   setEnteredUsername(event.target.value); // get the value the user currently entered\n  // };\n  // const ageChangeHandler = (event) => {\n  //   setEnteredAge(event.target.value);\n  // };\n\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    /*#__PURE__*/\n    // we use wrapper component to have one root element which won't render anything to the DOM\n    _jsxDEV(Wrapper, {\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n        title: error.title,\n        massage: error.massage,\n        onConfirm: errorHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.input,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addUserHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\" // value={enteredUsername}\n            // onChange={usernameChangeHandler}\n            ,\n            ref: nameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            children: \"Age (Years) : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"age\",\n            type: \"number\" // value={enteredAge}\n            // onChange={ageChangeHandler}\n            ,\n            ref: ageInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/seyedmmojtabaabutalebi/Desktop/React-works/second-react-2/src/components/Users/AddUser.js"],"names":["React","useState","useRef","Card","Button","ErrorModal","Wrapper","classes","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","title","massage","onAddUser","errorHandler","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,YAAY,GAAGR,MAAM,EAA3B;AACA,QAAMS,WAAW,GAAGT,MAAM,EAA1B,CAFyB,CAGzB;AACA;;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;;AAEA,QAAMa,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,WAAW,GAAGP,YAAY,CAACQ,OAAb,CAAqBC,KAAzC;AACA,UAAMC,cAAc,GAAGV,YAAY,CAACQ,OAAb,CAAqBC,KAA5C,CAHgC,CAIhC;;AACA,QAAIF,WAAW,CAACI,IAAZ,GAAmBC,MAAnB,KAA8B,CAA9B,IAAmCF,cAAc,CAACC,IAAf,GAAsBC,MAAtB,KAAiC,CAAxE,EAA2E;AACzET,MAAAA,QAAQ,CAAC;AACPU,QAAAA,KAAK,EAAE,eADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD,KAX+B,CAYhC;;;AACA,QAAI,CAACJ,cAAD,GAAkB,CAAtB,EAAyB;AACvBP,MAAAA,QAAQ,CAAC;AACPU,QAAAA,KAAK,EAAE,aADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AACDf,IAAAA,KAAK,CAACgB,SAAN,CAAgBR,WAAhB,EAA6BG,cAA7B,EApBgC,CAqBhC;AACA;AACA;AACD,GAxBD,CAPyB,CAiCzB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMM,YAAY,GAAG,MAAM;AACzBb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAGA;AAAA;AACE;AACA,YAAC,OAAD;AAAA,iBACGD,KAAK,iBACJ,QAAC,UAAD;AACE,QAAA,KAAK,EAAEA,KAAK,CAACW,KADf;AAEE,QAAA,OAAO,EAAEX,KAAK,CAACY,OAFjB;AAGE,QAAA,SAAS,EAAEE;AAHb;AAAA;AAAA;AAAA;AAAA,cAFJ,eASE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEnB,OAAO,CAACoB,KAAzB;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAEb,cAAhB;AAAA,kCAEE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,MAFP,CAGE;AACA;AAJF;AAKE,YAAA,GAAG,EAAEJ;AALP;AAAA;AAAA;AAAA;AAAA,kBAJF,eAWE;AAAO,YAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AACE,YAAA,EAAE,EAAC,KADL;AAEE,YAAA,IAAI,EAAC,QAFP,CAGE;AACA;AAJF;AAKE,YAAA,GAAG,EAAEC;AALP;AAAA;AAAA;AAAA;AAAA,kBAZF,eAmBE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAoCD,CA/ED;;GAAMH,O;;KAAAA,O;AAgFN,eAAeA,OAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/wrapper\";\n// use css module :\nimport classes from \"./AddUser.module.css\";\nconst AddUser = (props) => {\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  // const [enteredUsername, setEnteredUsername] = useState(\"\");\n  // const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = nameInputRef.current.value;\n    // to check validation\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid Input\",\n        massage: \"Please enter a valid name and age (non-empty values)\",\n      });\n      return;\n    }\n    //  '+' help force convension from string to number\n    if (+enteredUserAge < 1) {\n      setError({\n        title: \"Invalid Age\",\n        massage: \"Please enter a valid age (> 0)\",\n      });\n      return;\n    }\n    props.onAddUser(enteredName, enteredUserAge);\n    // to reset values after submit\n    // setEnteredUsername(\"\");\n    // setEnteredAge(\"\");\n  };\n\n  // const usernameChangeHandler = (event) => {\n  //   //set changes for every keystroke in input\n  //   setEnteredUsername(event.target.value); // get the value the user currently entered\n  // };\n  // const ageChangeHandler = (event) => {\n  //   setEnteredAge(event.target.value);\n  // };\n  const errorHandler = () => {\n    setError(null);\n  };\n  return (\n    // we use wrapper component to have one root element which won't render anything to the DOM\n    <Wrapper>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          massage={error.massage}\n          onConfirm={errorHandler}\n        ></ErrorModal>\n      )}\n      {/* // Card component is used to set style around the form input */}\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          {/* for is a keyName in js and it is not an attribute => so we use : htmlFor for label in form */}\n          <label htmlFor=\"username\">Username : </label>\n          {/* value reflect current state */}\n          <input\n            id=\"username\"\n            type=\"text\"\n            // value={enteredUsername}\n            // onChange={usernameChangeHandler}\n            ref={nameInputRef}\n          />\n          <label htmlFor=\"age\">Age (Years) : </label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            // value={enteredAge}\n            // onChange={ageChangeHandler}\n            ref={ageInputRef}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </Wrapper>\n  );\n};\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}