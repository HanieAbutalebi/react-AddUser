{"ast":null,"code":"var _jsxFileName = \"/Users/seyedmmojtabaabutalebi/Desktop/React-works/second-react-2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usersList, setUsersList] = useState([]);\n\n  const addUsersHandler = (uName, uAge) => {\n    setUsersList(prevUsersList => {\n      return [...prevUsersList, {\n        name: uName,\n        age: uAge,\n        id: Math.random().toString()\n      }];\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // we use Fragment || React.Fragment(if we donot import fragment) || <> </>(empty) it is render empty wrapper\n    // fragment\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddUser, {\n        onAddUser: addUsersHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n        users: usersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"rCuhwovjWVqRB5NhAf7v+2So/Rg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seyedmmojtabaabutalebi/Desktop/React-works/second-react-2/src/App.js"],"names":["React","useState","Fragment","AddUser","UsersList","App","usersList","setUsersList","addUsersHandler","uName","uAge","prevUsersList","name","age","id","Math","random","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACvCH,IAAAA,YAAY,CAAEI,aAAD,IAAmB;AAC9B,aAAO,CACL,GAAGA,aADE,EAEL;AAAEC,QAAAA,IAAI,EAAEH,KAAR;AAAeI,QAAAA,GAAG,EAAEH,IAApB;AAA0BI,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAA9B,OAFK,CAAP;AAID,KALW,CAAZ;AAMD,GAPD;;AAQA;AAAA;AACE;AACA;AACA,YAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAQD;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\nfunction App() {\n  const [usersList, setUsersList] = useState([]);\n  const addUsersHandler = (uName, uAge) => {\n    setUsersList((prevUsersList) => {\n      return [\n        ...prevUsersList,\n        { name: uName, age: uAge, id: Math.random().toString() },\n      ];\n    });\n  };\n  return (\n    // we use Fragment || React.Fragment(if we donot import fragment) || <> </>(empty) it is render empty wrapper\n    // fragment\n    <Fragment>\n      <AddUser onAddUser={addUsersHandler} />\n      <UsersList users={usersList} />\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}